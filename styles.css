html {
    box-sizing: border-box;
}

body {
    font-family: sans-serif;
    color: #0a0a23;
}

/* will select any span element whose class includes sr-only */
/* clip used to define the visible portions of an element */
/* clip-path property determines the shape the clip property should take */

/* !important ensure these properties are always applied, regardless of order or specificity. */

span[class~="sr-only"] {
    border: 0 !important;
    clip: rect(1px, 1px, 1px, 1px) !important;
    clip-path: inset(50%) !important;

    width: 1px !important;
    height: 1px !important;

    overflow: hidden !important;
    white-space: nowrap !important;

    position: absolute !important;
    padding: 0 !important;
    margin: -1px !important;
}

h1 {
    max-width: 37.25rem;
    margin: 0 auto;
    padding: 1.5rem 1.25rem; 
}

h1 .flex {
    display: flex;
    flex-direction: column-reverse;
    gap: 1rem;
}

/* targets the first span  */
h1 .flex span:first-of-type {
    font-size: 0.7em;
}

h1 .flex span:last-of-type {
    font-size: 1.2em;
}

section {
    max-width: 40rem; 
    margin: 0 auto;
    border: 2px solid #d0d0d5;
}

/* position: sticky; property. This property allows an element to stick to a specific position on the viewport when the user scrolls. */
/* ensure your #years element does not get hidden by different stacks
z-index */
#years {
    display: flex;
    justify-content: flex-end;
    position: sticky;
    top: 0;

    background: #0a0a23;
    color: #fff;

    margin: 0 -2px;
    padding: 0.5rem calc(1.25rem + 2px) 0.5rem 0;

    /* given the highest priority */
    z-index: 999; 
}

/* any span which has a class  */
#years span[class] {
    font-weight: bold;
    width: 4.5rem;
    text-align: right;
}

.table-wrap {
    padding: 0 0.75rem 1.5rem 0.75rem;
}

/* targets all those span which doesn't hace sr-only class  */
/* deleted */
/* span {
    font-weight: normal;
} */

/*collapse: will allow cell borders to collapse into a single border, instead of a border around each cell */
table {
    border-collapse: collapse;
    border: 0;

    width: 100%;
    position: relative;
    margin-top: 3rem;
}

table caption {
    color: #356eaf;
    font-size: 1.3em;
    font-weight: normal;

    position: absolute;
    top: -2.25rem;
    left: 0.5rem;
}

tbody td {
    width: 100vw;
    min-width: 4rem;
    max-width: 4rem;
}

tbody th {
    width: calc(100% - 12rem);
}

tr[class="total"] {
    border-bottom: 4px double #0a0a23;
    font-weight: bold;
}

tr[class="total"] th {
    text-align: left;
    padding: 0.5rem 0 0.25rem 0.5rem;
}

tr.total td {
    text-align: right;
    padding: 0 0.25rem;
}

/* target the third td element within your total table rows */
/* tr.total: tr element with a class of total */
tr.total td:nth-of-type(3) {
    padding-right: 0.5rem;
}

tr.total:hover {
    background: #99c9ff;
}

td.current {
    font-style: italic;
}

tr.data {
    background-image: linear-gradient(to bottom, #dfdfe2 1.845rem, white 1.845rem);
}

tr.data th {
    text-align: left;
    padding-top: 0.3rem;
    padding-left: 0.5rem;
}

tr.data th .description {
    display: block;
    font-style: italic;
    font-weight: normal;
    padding: 1rem 0 0.75rem;
    margin-right: -13.5rem;
}

tr.data td {
    vertical-align: top;
    text-align: right;
    padding: 0.3rem 0.25rem 0;
}

tr.data td:last-of-type {
    padding-right: 0.5rem;
}